# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages: # List of stages for jobs, and their order of execution
    - build
    - release


# release:
#     image: electronuserland/builder:wine
#     stage: release
#     script:
#         # - cd desktop
#         # - yarn
#         # - yarn package
#         - mkdir release-cli
#         - curl https://gitlab.com/gitlab-org/release-cli/-/releases/v0.15.0/downloads/bin/release-cli-linux-amd64 --output release-cli\release-cli
#         - cd release-cli
#         - release-cli create --name "Release $CI_COMMIT_TAG" --description CHANGELOG.md --tag-name "$CI_COMMIT_TAG"     

#     release:
#         description: "super release"
#         name: "My awesome release"
#         tag_name: "$CI_COMMIT_TAG"




electron-release-build:
  stage: build
  image: electronuserland/builder:wine
  script:
        - cd desktop
        - yarn
        - yarn package -- --mac
  artifacts:
    paths:
      - desktop/release/build/*.dmg
      - desktop/release/build/*.yml
    expire_in: 1 month



release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  before_script:
    - apk --no-cache add openssl ca-certificates
    - mkdir -p /usr/local/share/ca-certificates/extra
    - openssl s_client -connect ${CI_SERVER_HOST}:${CI_SERVER_PORT} -servername ${CI_SERVER_HOST} -showcerts </dev/null 2>/dev/null | sed -e '/-----BEGIN/,/-----END/!d' | tee "/usr/local/share/ca-certificates/${CI_SERVER_HOST}.crt" >/dev/null
    - update-ca-certificates
  script:
    - >
      release-cli create --name "Release v.0.1" --description "Created using the release-cli"
      --tag-name v.0.1 --ref v.0.1
      --assets-link='{"name": "Asset1",  "direct_asset_path": "desktop/release/build/*.dmg"}'
